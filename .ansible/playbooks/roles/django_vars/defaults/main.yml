---
cops_django_name: djangoinstance
cops_django_project_module_name: "{{cops_django_name}}"
cops_django_settings_module: "{{cops_django_project_module_name}}.settings.instances.{{cops_django_deploy_env}}"
cops_django_project_dir: "./src/{{cops_django_project_module_name.replace('.', '/')}}"
cops_django_py_ver: "3.7"
cops_django_deploy_env: "dev"
cops_django_docker_image_tag: "{{cops_django_name}}"
cops_django_default_docker_tag: "latest"
cops_django_docker_tag: "{{cops_django_default_docker_tag}}"
cops_django_tld_domain: example.com
cops_django_mail_domain: "{{ cops_django_tld_domain }}"
cops_django_default_gitref: "master"
cops_django_gitref: "{{cops_django_default_gitref}}"
cops_django_dir: "/srv/docker/{{cops_django_name}}"
cops_django_hostname: "{{cops_django_deploy_env}}-{{cops_django_name}}.{{cops_django_tld_domain}}"
cops_django_alternate_hostnames: [".{{cops_django_tld_domain}}"]
cops_django_secret_key: "SuperSecret"
cops_django_gateway: "{{ ansible_default_ipv4.address}}"
cops_django_composename: "{{cops_django_name}}"
# docker compose settings (may include ip ip:port)
cops_django_http_port: 80
cops_django_https_port: 443
cops_django_api_port: 8000
cops_django_api_listen: 0.0.0.0
cops_django_http_listen: 0.0.0.0
#
cops_django_db_host: "db"
cops_django_db_port: "5432"
cops_django_db_user: "secretJFCxwPHz99R9jIi"
cops_django_db_password: "secret4gzQNe3c8851VOJ"
cops_django_db_name: "{{cops_django_name}}"
cops_django_devmode: False
cops_django_build_args: "--no-cache django cron"
# backup could be remove in a-while when we have redeployed it everywhere
cops_django_restarted_services_default: "db redis django nginx backup cron"
cops_django_restarted_services: "{{cops_django_restarted_services_default}}"
cops_django_purge_volumes: [statics]
cops_django_medias_owner: "1000"
cops_django_medias_group: "1000"
cops_django_force_sync_ssh_user: null
cops_django_sync_ssh_user: ""
cops_django_sshargs: >-
  {% set k = hostvars[inventory_hostname].get(
                'ansible_ssh_private_key_file', '') %}
  {% if k%}-o IdentityFile={{k}} -o IdentitiesOnly=yes{%endif%}
  {% if (
      hostvars[inventory_hostname].ansible_connection|default('ssh')
     ) not in [ 'smart', 'local'] %}
  {{ hostvars[inventory_hostname].ssh_args | default('') }}
  {{ hostvars[inventory_hostname].ansible_ssh_args | default('') }}
  {{ hostvars[inventory_hostname].ansible_ssh_common_args | default('') }}
  {{ hostvars[inventory_hostname].ansible_ssh_extra_args | default('') }}
  {% endif %}
  {% if((cops_django_force_sync_ssh_user) or
        (cops_django_sync_ssh_user and (cops_django_force_sync_ssh_user == True))
    )%}
  {% set user = cops_django_sync_ssh_user or ansible_user or '' %}
  {% if user %}-l {{user}}{% endif %}
  {% endif %}
cops_django_build: false
cops_django_pull: true
cops_django_registries: []
#- {registry: registry.foo.net, username: foo, password: bar}
cops_django_compose_files: [docker-compose.yml, docker-compose-prod.yml]
cops_django_dc:
  docker-compose {% for i in cops_django_compose_files %} -f {{i}}{% endfor %}
  -p "{{cops_django_composename}}"
cops_django_default_from_email: noreply@{{cops_django_hostname}}
cops_django_server_email: "{{cops_django_default_from_email}}"
cops_django_mailcatcher_user: mailcatcher
cops_django_mailcatcher_password: mailcatcher
cops_django_email_server: mailcatcher
cops_django_email_host_user: ''
cops_django_email_host_password: ''
cops_django_email_host_port: 1025
cops_django_email_use_tls: 'no'
cops_django_http_protect_user: "root"
cops_django_http_protect_password: "rootroot"
cops_django_redis_url: "redis://redis:6379/1"
cops_django_hosts_whitelist: "{{(
    [cops_django_hostname, '0.0.0.0', '.{0}'.format(cops_django_hostname)]+
    cops_django_alternate_hostnames
  )|join('-|_')}}"
cops_django_hostnames: "{{([cops_django_hostname, '0.0.0.0'] + cops_django_alternate_hostnames)|join('-|_')}}"
cops_django_sentry_tags: ["env:{{cops_django_deploy_env}}"]
cops_django_sentry_dsn: ''
cops_django_docker_env_freeform: |-
  {{ cops_django_docker_env_defaults}}
  {{ cops_django_docker_env_extra}}
cops_django_gunicorn_class: "sync"
cops_django_gunicorn_extra_args: ""
cops_django_docker_env_defaults: |-
  # This need to be changed in production
  SECRET_KEY={{ cops_django_secret_key }}
  # gunicorn
  GUNICORN_CLASS={{cops_django_gunicorn_class}}
  GUNICORN_EXTRA_ARGS={{cops_django_gunicorn_extra_args}}
  # db
  POSTGRES_HOST={{ cops_django_db_host }}
  POSTGRES_PORT={{ cops_django_db_port }}
  POSTGRES_USER={{ cops_django_db_user }}
  POSTGRES_DB={{ cops_django_db_name }}
  POSTGRES_PASSWORD={{cops_django_db_password }}
  PGPASSWD={{cops_django_db_password }}
  # cors
  DJANGO__CORS_ORIGIN_WHITELIST={{cops_django_hosts_whitelist}}
  DJANGO__COPS_ALL_HOSTNAMES={{cops_django_hostnames}}
  DJANGO__ALLOWED_HOSTS={{cops_django_hosts_whitelist}}
  DJANGO__DEPLOY_ENV={{cops_django_deploy_env}}
  DJANGO__HTTP_PROTECT_USER={{cops_django_http_protect_user}}
  DJANGO__HTTP_PROTECT_PASSWORD={{cops_django_http_protect_password}}
  {% if cops_django_sentry_dsn %}
  DJANGO__SENTRY_DSN={{cops_django_sentry_dsn}}
  DJANGO__SENTRY_RELEASE={{cops_django_docker_tag}}
  DJANGO__SENTRY_TAGS={{cops_django_sentry_tags|join(',')}}
  {% endif %}
  {% if cops_django_devmode %}
  DJANGO__CORS_ORIGIN_ALLOW_ALL=y
  DJANGO__DEBUG=y
  {% endif %}
  DJANGO__DEFAULT_FROM_EMAIL={{ cops_django_default_from_email }}
  DJANGO__SERVER_EMAIL={{ cops_django_server_email }}
  DJANGO__EMAIL_HOST={{cops_django_email_server}}
  {% if "{0}".format(cops_django_email_use_tls).lower() in ['yes', 'no'] %}
  DJANGO__EMAIL_USE_TLS={{cops_django_email_use_tls}}
  {% endif %}
  DJANGO__EMAIL_PORT={{cops_django_email_host_port}}
  DJANGO__EMAIL_HOST_USER={{cops_django_email_host_user}}
  DJANGO__EMAIL_HOST_PASSWORD={{cops_django_email_host_password}}
  MAILCATCHER_USER={{cops_django_mailcatcher_user}}
  MAILCATCHER_PASSWORD={{cops_django_mailcatcher_password}}
  DJANGO__REDIS_URL={{cops_django_redis_url}}
  REDIS_URL={{cops_django_redis_url}}
# free form for params inside dockerenv
cops_django_dotenv: |-
  DJANGO__HTTP_LISTEN={{cops_django_http_listen}}
  DJANGO__API_LISTEN={{cops_django_api_listen}}
  DJANGO__HTTP_PORT={{cops_django_http_port}}
  DJANGO__HTTPS_PORT={{cops_django_https_port}}
  DJANGO__API_PORT={{cops_django_api_port}}
  APP_TYPE=django
  DJANGO_SETTINGS_MODULE={{cops_django_settings_module}}
  DJANGO_PY_VER={{ cops_django_py_ver }}
  DJANGO_NAME={{ cops_django_name }}
  COMPOSE_PROJECT_NAME={{cops_django_composename}}
  CONTROL_COMPOSE_FILES={{cops_django_compose_files|join(' ')}}
  CI_COMMIT_SHA={{cops_django_gitref}}
  DJANGO_IMAGE={{ cops_django_docker_image }}
  DJANGO_IMAGE_VERSION={{cops_django_docker_tag}}
  CONTROL_COMPOSE_FILES={{cops_django_compose_files|join(' ')}}
cops_django_dotenv_extra: ""
# free form for params inside dockerenv
cops_django_docker_env_extra: ""
# free form for params inside local.py
cops_django_localpy_extra: ""
# Normally playbook is in ./.ansible/playbooks
cops_django_code_dir: "{{playbook_dir}}/../.."
cops_django_theme_rsync_opts: ["-azv", "--delete"]
cops_django_code_rsync_opts: [
    "-azv",
    # include deploy projects base code
    "--include", "local/*-deploy",
    "--exclude", ".ansible",
    "--exclude", "local/*",
    "--exclude", ".tox",
    "--exclude", ".env",
    "--exclude", "docker.env"]
cops_django_backup_postgresql: "{{'5432' == '{0}'.format(cops_django_db_port)}}"
cops_django_backup_paths_to_backup:
- "{{cops_django_dir}}"
cops_django_backup_docker_volumes: [mediafiles]
cops_django_backup_docker_volumes_: |-
  {% set res = [] %}
  {% for i in cops_django_backup_docker_volumes %}
  {% set  _ = res.append('_'.join([cops_django_composename, i])) %}
  {% endfor %}
  {{ res | to_json }}
cops_django_backup_pgdump_urls:
- name: "{{cops_django_db_name}}"
  url: "postgres://{{
      cops_django_db_user}}:{{cops_django_db_password}}@{{
        cops_django_db_host}}:{{cops_django_db_port}}/{{
          cops_django_db_name}}"
  docker_dir: "{{cops_django_dir}}"
  docker_service: backup
  docker_compose: "{{cops_django_dc}}"
cops_django_sync_theme_contents_front: |-
  {% set res = {} %}
  {% set _ = res.update({
    "{0}/{1}".format(cops_django_project_dir, '/static/dist/'): {},
    "{0}/{1}".format(cops_django_project_dir, '/static/js/'): {},
    "{0}/{1}".format(cops_django_project_dir, '/static/css/'): {},
    "{0}/{1}".format(cops_django_project_dir, '/static/styles/'): {},
    "{0}/{1}".format(cops_django_project_dir, '/static/scripts/'): {},
  }) %}
  {{ res | to_json }}
cops_django_sync_theme_contents_webpack: |-
  {% set res = {} %}
  {% set _ = res.update({
    "{0}/{1}".format(cops_django_project_dir, '/webpack-stats.json'): {},
    'webpack-stats.json': {},
  }) %}
  {% set _ = res.update(cops_django_sync_theme_contents_front) %}
  {{ res | to_json }}
cops_django_sync_theme_contents: {}
#
# teleport vars (duplicate environment to another
#
teleport_mode: standard
# teleport_mode: standard|makinastates
# teleport_origin: <origin from where we restore>
# teleport_destination: <destination to restore>
teleport_origin_dir: "/srv/nobackup/teleport"
teleport_origin_dump_path: "{{teleport_origin_dir}}/dump.gz"
teleport_destination_dir: "/srv/nobackup/teleport"
teleport_destination_dump_path: "{{teleport_destination_dir}}/dump.gz"
teleport_origin_dump_script: |-
  set -ex
  cd "{{teleport_origin_dir}}"
  {{teleport_origin_db_pgdump_script}}
  cd "{{teleport_origin_dir}}"
  gzip -f dump
teleport_origin_db_pgdump_script: |-
  {% if teleport_mode in ['makinastates'] %}
  {% if teleport_origin_db_password %}PGPASSWORD="{{teleport_origin_db_password}}"{% endif %} \
  pg_dump \
    --dbname="{{teleport_origin_db_name}}" --user="{{teleport_origin_db_user}}" \
    --host="{{teleport_origin_db_host}}" --port="{{teleport_origin_db_port}}" -Fc>dump
  {% else %}
  cd "{{cops_django_dir}}"
  {{cops_django_dc}} exec -T db pg_dump -U {{cops_django_db_user}} -Fc {{cops_django_db_name}} > "{{teleport_origin_dir}}/dump"
  {% endif %}
teleport_origin_db_host: "{{cops_django_db_host}}"
teleport_origin_db_port: "{{cops_django_db_password}}"
teleport_origin_db_db: "{{cops_django_db_host}}"
teleport_origin_db_user: "{{cops_django_db_user}}"
teleport_origin_db_password: "{{cops_django_db_password}}"
teleport_origin_db_name: "{{cops_django_db_name}}"
teleport_origin_db_is_docker: "{{teleport_mode in ['standard'] and True or False}}"
teleport_origin_db_dockername: "{{cops_django_name}}_db_1"
teleport_pg_restore_drop_db: true
teleport_django_fakeinitial: true
teleport_pg_restore: >-
  {% if teleport_pg_restore_drop_db%}
  dropdb -U $POSTGRES_USER {{cops_django_name}} &&
  createdb -U $POSTGRES_USER -O $POSTGRES_USER {{cops_django_db_name}}
  -E {{teleport_db_encoding}} &&
  {%endif%}
  zcat /tmp/dump.gz | pg_restore
  --no-owner --no-privileges --no-acl
  {% if not teleport_pg_restore_drop_db%} --clean --if-exists{%endif%}
  -U $POSTGRES_USER -d {{cops_django_db_name}}
teleport_db_encoding: 'UTF-8'
teleport_ms_medias_dir: "/srv/projects/{{cops_django_name}}/data/media/"
teleport_docker_medias_dir: "/var/lib/docker/volumes/{{cops_django_name}}_mediafiles/_data/"
teleport_origin_medias_dir: "{% if teleport_mode in ['makinastates'] %}{{teleport_ms_medias_dir}}{%else%}{{teleport_docker_medias_dir}}{%endif%}"
teleport_destination_medias_dir: "{{teleport_docker_medias_dir}}"
teleport_origin_sshargs: >-
  {% set h = groups[teleport_origin][0] %}
  {% set k = hostvars[h].get(
                'ansible_ssh_private_key_file', '') %}
  {% if k%}-o IdentityFile={{k}} -o IdentitiesOnly=yes{%endif%}
  {% if (
      hostvars[h].ansible_connection|default('ssh')
     ) not in [ 'smart', 'local'] %}
  {{ hostvars[h].ssh_args | default('') }}
  {{ hostvars[h].ansible_ssh_args | default('') }}
  {{ hostvars[h].ansible_ssh_common_args | default('') }}
  {{ hostvars[h].ansible_ssh_extra_args | default('') }}
  {% endif %}
  {% if((cops_django_force_sync_ssh_user) or
        (cops_django_sync_ssh_user and (cops_django_force_sync_ssh_user == True))
    )%}
  {% set user = cops_django_sync_ssh_user or ansible_user or '' %}
  {% if user %}-l {{user}}{% endif %}
  {% endif %}
teleport_destination_sshargs: >-
  {% set h = groups[teleport_destination][0] %}
  {% set k = hostvars[h].get(
                'ansible_ssh_private_key_file', '') %}
  {% if k%}-o IdentityFile={{k}} -o IdentitiesOnly=yes{%endif%}
  {% if (
      hostvars[h].ansible_connection|default('ssh')
     ) not in [ 'smart', 'local'] %}
  {{ hostvars[h].ssh_args | default('') }}
  {{ hostvars[h].ansible_ssh_args | default('') }}
  {{ hostvars[h].ansible_ssh_common_args | default('') }}
  {{ hostvars[h].ansible_ssh_extra_args | default('') }}
  {% endif %}
  {% if((cops_django_force_sync_ssh_user) or
        (cops_django_sync_ssh_user and (cops_django_force_sync_ssh_user == True))
    )%}
  {% set user = cops_django_sync_ssh_user or ansible_user or '' %}
  {% if user %}-l {{user}}{% endif %}
  {% endif %}
teleport_post_reset_script_default: |-
  set -ex
  {% if teleport_django_fakeinitial %}
  cd {{cops_django_dir}};
  {{cops_django_dc}} run \
  -u django --no-deps --rm django sh -ec \
  '/code/venv/bin/python ./manage.py migrate --fake-initial'
  {%endif%}
teleport_post_reset_script: "{{teleport_post_reset_script_default}}"
###
